{
  "hash": "1c5a3589150953b9f46f9463dc125f4c",
  "result": {
    "engine": "knitr",
    "markdown": "---\nengine: knitr\ntitle: \"BDS\"\n---\n\n# What is BDS?\n\n- **BDS** = Basic Data Structure\n- A flexible ADaM format used for most subject-level analysis datasets\n- Key features:\n  - One record per subject, parameter, and timepoint\n  - Standardized variables: `PARAMCD`, `AVAL`, `ADY`, `TRTP`, etc.\n  - Derived from SDTM + ADSL\n\n\n\n# BDS Subtypes - part 1\n\nBDS is used for different analysis goals:\n\n::: nonincremental\n\n| Subtype         | Purpose (in simple terms)                                                                 | Examples         |\n|-----------------|--------------------------------------------------------------------------------------------|------------------|\n| Findings        | For things we measure repeatedly during the study, like blood pressure or lab tests       | ADVS, ADLB, ADPC |\n| Exposure        | Describes what treatment the subject actually received — how much, how often, how long    | ADEX             |\n| Time-to-Event   | Tracks how long it takes for something important to happen (like death, relapse, etc.)    | ADTTE            |\n\n\n:::\n\n# BDS Subtypes - part2\n\nBDS is used for different analysis goals:\n\n::: nonincremental\n\n\n| Subtype         | Purpose (in simple terms)                                                                 | Examples         |\n|-----------------|--------------------------------------------------------------------------------------------|------------------|\n| Response        | Records the subject's response to treatment, usually as categories like \"improved\" or \"worsened\" | ADRS             |\n| PK Parameters   | Shows how the drug behaves in the body: absorption, concentration, elimination, etc.      | ADPPK            |\n\n\n:::\n\n\nAll share the same core structure, adapted for their purpose.\n\n\n\n# Common BDS Datasets\n\n## ADPC – Pharmacokinetics Concentrations\n\n- Based on SDTM PC (Pharmacokinetics Concentrations) domain  \n- Measures drug levels in biofluids (e.g. plasma)  \n- Used in non-compartmental PK analysis  \n\n\n## ADPPK – PK Parameters\n\n- Based on ADPC results  \n- Derived AUC (Area Under Curve), Cmax (Maximum Concentration), Tmax (Time to Max Concentration), etc.  \n- Used for dose-response modeling  \n\n\n## ADRS – Response Data\n\n- Derived from RS (Disease Response), TU (Tumor Identification), TR (Tumor Results) domains  \n- Categorical outcomes: CR (Complete Response), PR (Partial Response), SD (Stable Disease), PD (Progressive Disease)  \n- Often used in oncology  \n\n\n## ADTTE – Time to Event\n\n- Based on ADSL (Subject-Level) and AE (Adverse Events), DS (Disposition), VS (Vital Signs) events  \n- Used for endpoints like OS (Overall Survival), PFS (Progression-Free Survival), time to death  \n- Key variables: `AVAL`, `CNSR` (Censoring), `STARTDT`, `ADT` (Analysis Date)  \n\n\n## ADVS – Vital Signs\n\n- Based on SDTM VS (Vital Signs) domain  \n- Derives BMI (Body Mass Index), MAP (Mean Arterial Pressure), etc.  \n- Used in safety summaries  \n\n\n# Variable Types in BDS - part 1\n\nWe group derived variables by **purpose**:\n\n- Timing\n- Parameter Identification\n- Results\n- Derived Parameters\n- Reference Ranges\n\n# Variable Types in BDS - part 2\n\nWe group derived variables by **purpose**:\n\n- Baseline & Change\n- Flags\n- Treatment\n- Categorization\n- Criterion-Based Flags\n- Row creation / imputation\n\n\n## Timing Variables\n\nThese variables place each observation in the study timeline and help track when it occurred relative to treatment, visits, or other study milestones.\n\n::: nonincremental\n| Variable | Description | Why it's Needed |\n|----------|-------------|-----------------|\n| `ADT` | Analysis date | Anchors timepoint in study |\n| `ADTM` | Analysis datetime | Adds time granularity |\n| `ADY` | Relative study day | For analysis over time |\n:::\n\n\n## Timing Variables\n\nThese variables place each observation in the study timeline and help track when it occurred relative to treatment, visits, or other study milestones.\n\n::: nonincremental\n| Variable | Description | Why it's Needed |\n|----------|-------------|-----------------|\n| `ADTF`, `ATMF` | Imputation flags | Tracks incomplete dates |\n| `AVISIT`, `AVISITN` | Visit name/number | Sorting & summaries |\n| `APHASE`, `APERIOD` | Study phase/period | For grouping data |\n| `ONTRTFL` | On-treatment flag | Treatment window check |\n:::\n\n\n## Parameter Identification\n\nThese variables define what is being measured — each record in BDS must correspond to a unique parameter per subject per timepoint.\n\n::: nonincremental\n| Variable | Description |\n|----------|-------------|\n| `PARAMCD` | Short parameter code |\n| `PARAM` | Full parameter name |\n| `PARAMN` | Numeric ID (optional) |\n| `PARCAT1`, `PARCAT2` | Parameter categories |\n:::\n\n\n## Result Variables\n\nThese variables store the main output of analysis — either numeric results or their character equivalents and categorized forms.\n\n::: nonincremental\n| Variable | Description |\n|----------|-------------|\n| `AVAL` | Numeric result |\n| `AVALC` | Character result |\n| `AVALCATy` | Categorization (e.g. low/normal/high) |\n:::\n\n\n## Derived Parameters\n\nUsed to compute secondary or composite measurements derived from primary variables, such as BMI or MAP.\n\n::: nonincremental\n| Variable | Description |\n|----------|-------------|\n| `BMI`, `MAP`, etc. | Derived from base measurements |\n:::\n\n\n## Reference Ranges\n\nThese help classify whether values are within normal clinical limits, often based on lab ranges.\n\n::: nonincremental\n| Variable | Description |\n|----------|-------------|\n| `ANRLO`, `ANRHI` | Normal limits |\n| `ANRIND` | Low/High/Normal flag |\n| `BNRIND` | Baseline version of ANRIND |\n:::\n\n\n## Baseline & Change\n\nThese variables allow comparison of on-treatment values to a defined pre-treatment baseline.\n\n::: nonincremental\n| Variable | Description |\n|----------|-------------|\n| `BASE` | Baseline value |\n| `CHG` | Change from baseline |\n| `PCHG` | Percent change |\n| `ABLFL` | Baseline flag |\n| `BASETYPE` | Type of baseline measurement |\n:::\n\n\n## Flags & Filtering\n\nBinary flags are used to identify records relevant to specific analyses or TLGs.\n\n::: nonincremental\n| Variable | Description |\n|----------|-------------|\n| `ANL01FL` | Primary analysis record flag |\n| `ASEQ` | Sequence number |\n:::\n\n\n## Treatment Assignment\n\nUsed to categorize subjects by planned and actual treatment arms.\n\n::: nonincremental\n| Variable | Description |\n|----------|-------------|\n| `TRTA` | Actual treatment |\n| `TRTP` | Planned treatment |\n:::\n\n\n## Categorization & Criteria\n\nUsed to apply clinical cutoffs or create groupings based on results.\n\n::: nonincremental\n| Variable | Description |\n|----------|-------------|\n| `AVALCATy` | Categorized values |\n| `CRITy`, `CRITyFL`, `CRITyFN` | Threshold logic (e.g., BP > 180) |\n:::\n\n\n## ADSL Merge & New Rows\n\nDerived BDS datasets also pull in subject-level attributes from ADSL, and may create new rows summarizing or imputing data.\n\n- Add subject-level variables from ADSL (e.g. `AGE`, `SEX`, `TRTSDT`)\n- Derive new records (e.g. summary rows, worst value, average across visits)\n\n\n# Hands-On Workshop: BDS – Findings\n\nWe will derive a BDS Findings dataset using `{admiral}`.\n\nLink: [https://pharmaverse.github.io/admiral/articles/bds_finding.html](https://pharmaverse.github.io/admiral/articles/bds_finding.html)\n\nKey steps:\n- Read SDTM data\n- Derive `ADT`, `ADY`\n- Assign `PARAMCD`, `PARAM`\n- Derive `AVAL`, `BASE`, `CHG`, `ANL01FL`, etc.\n- Merge with ADSL\n- Add labels and attributes\n\nRepository: [GitHub Code](https://github.com/pharmaverse/admiral/blob/main/vignettes/bds_finding.Rmd)\n\n\n\n# Other BDS Types Work Similarly\n\nOnce you master Findings-type BDS, the rest follow similar logic:\n\n- TTE: uses `CNSR`, event definitions\n- Exposure: aggregates dose/duration from EX\n\nFurther examples:\n- [Time-to-Event BDS (ADTTE)](https://pharmaverse.github.io/admiral/cran-release/articles/bds_tte.html)\n- [Exposure BDS](https://pharmaverse.github.io/admiral/articles/bds_exposure.html)\n\n\n\n# Questions?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}